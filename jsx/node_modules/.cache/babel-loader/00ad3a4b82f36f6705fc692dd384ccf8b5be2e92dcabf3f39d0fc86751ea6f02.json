{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\OneDrive\\\\Desktop\\\\Web Developement\\\\ReactJS\\\\jsx\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    setText(text.toUpperCase()); //This will convert the text in textArea to uppercase.\n    /*#__PURE__*/_jsxDEV(Alert, {\n      text: \"This is alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  };\n  const handleLoClick = () => {\n    setText(text.toLowerCase()); //This will convert the text in textArea to uppercase.\n    /*#__PURE__*/_jsxDEV(Alert, {\n      text: \"This is alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  };\n  /*This function will run when we change the value in textarea, we have to make this \r\n  function because we have fixed the value of textarea to be 'text', so using this function\r\n  we can change the value to what user want. */\n  const handleOnChange = event => {\n    //Using this function we are changing value of 'text to 'text' + value entered by user. \n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  /* correct way to change value of text : setText(\"enter text\");\r\n    wrong way : text=\"new text\"; */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: props.mode === 'light' ? {\n        color: 'black'\n      } : {\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            placeholder: \"Enter text here\",\n            value: text,\n            onChange: handleOnChange,\n            id: \"exampleFormControlTextarea1\",\n            rows: \"6\",\n            style: {\n              backgroundColor: props.mode === 'light' ? 'white' : 'grey',\n              color: props.mode === 'light' ? 'black' : 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary \",\n          onClick: handleUpClick,\n          children: \"Convert to Uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-3\",\n          onClick: handleLoClick,\n          children: \"Convert to Lowercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Text Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You have written \", text.split(\" \").length, \" words and \", text.length, \" characters.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","setText","text","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","handleLoClick","toLowerCase","handleOnChange","event","target","value","children","style","mode","color","className","heading","placeholder","onChange","id","rows","backgroundColor","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/risha/OneDrive/Desktop/Web Developement/ReactJS/jsx/src/Components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport Alert from './Components/Alert';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = ()=>{\r\n    setText(text.toUpperCase()); //This will convert the text in textArea to uppercase.\r\n    <Alert text='This is alert'/>\r\n  }\r\n  const handleLoClick = ()=>{\r\n    setText(text.toLowerCase()); //This will convert the text in textArea to uppercase.\r\n    <Alert text='This is alert'/>\r\n  }\r\n/*This function will run when we change the value in textarea, we have to make this \r\nfunction because we have fixed the value of textarea to be 'text', so using this function\r\nwe can change the value to what user want. */\r\n  const handleOnChange = (event)=>{\r\n//Using this function we are changing value of 'text to 'text' + value entered by user. \r\n    setText(event.target.value);  \r\n  }\r\n  const [text,setText] = useState(\"\");\r\n  /* correct way to change value of text : setText(\"enter text\");\r\n    wrong way : text=\"new text\"; */\r\n  return (\r\n    <>\r\n    <div style={props.mode==='light' ? {color:'black'} : {color:'white'}}>\r\n      <div className='container my-3'>  \r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"6\" \r\n              style={{backgroundColor: props.mode==='light' ? 'white' : 'grey' ,\r\n                      color: props.mode==='light' ? 'black' : 'white'}}\r\n            ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n        <p>You have written {text.split(\" \").length  } words and {text.length} characters.</p>\r\n      </div>\r\n    </div>  \r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
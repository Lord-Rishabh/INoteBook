{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\OneDrive\\\\Desktop\\\\Web Developement\\\\ReactJS\\\\jsx\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    setText(text.toUpperCase()); //This will convert the text in textArea to uppercase.\n  };\n\n  /*This function will run when we change the value in textarea, we have to make this \r\n  function because we have fixed the value of textarea to be 'text', so using this function\r\n  we can change the value to what user want. */\n  const handleOnChange = event => {\n    //Using this function we are changing value of 'text to 'text' + value entered by user. \n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  /* correct way to change value of text : setText(\"enter text\");\r\n    wrong way : text=\"new text\"; */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Enter text here\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"exampleFormControlTextarea1\",\n          rows: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Text Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mb-9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","setText","text","toUpperCase","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/risha/OneDrive/Desktop/Web Developement/ReactJS/jsx/src/Components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = ()=>{\r\n    setText(text.toUpperCase()); //This will convert the text in textArea to uppercase.\r\n  }\r\n\r\n/*This function will run when we change the value in textarea, we have to make this \r\nfunction because we have fixed the value of textarea to be 'text', so using this function\r\nwe can change the value to what user want. */\r\n  const handleOnChange = (event)=>{\r\n//Using this function we are changing value of 'text to 'text' + value entered by user. \r\n    setText(event.target.value);  \r\n  }\r\n  const [text,setText] = useState(\"\");\r\n  /* correct way to change value of text : setText(\"enter text\");\r\n    wrong way : text=\"new text\"; */\r\n  return (\r\n    <>\r\n      <div className='container'>  \r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"6\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      </div>\r\n        <h1>Your Text Summary</h1>\r\n      <div className=\"container mb-9\"></div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAI;IACxBC,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;;EAEH;AACA;AACA;EACE,MAAMC,cAAc,GAAIC,KAAK,IAAG;IAClC;IACIJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD,MAAM,CAACL,IAAI,EAACD,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACnC;AACF;EACE,oBACEE,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA;QAAAc,QAAA,EAAKV,KAAK,CAACY;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBpB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAAAD,QAAA,eACjBd,OAAA;UAAUe,SAAS,EAAC,cAAc;UAACM,WAAW,EAAC,iBAAiB;UAACR,KAAK,EAAEL,IAAK;UAACc,QAAQ,EAAEZ,cAAe;UAACa,EAAE,EAAC,6BAA6B;UAACC,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5J,CAAC,eACNpB,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACU,OAAO,EAAEnB,aAAc;QAAAQ,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,eACJpB,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BpB,OAAA;MAAKe,SAAS,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACtC,CAAC;AAEP;AAACf,EAAA,CA7BuBF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
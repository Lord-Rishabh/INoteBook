{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\OneDrive\\\\Desktop\\\\Web Developement\\\\ReactJS\\\\jsx\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet name = \"Rishabh\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [btn, setbtn] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setbtn('light');\n      document.body.style.backgroundColor = '#0B2447';\n      setAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      setbtn('dark');\n      document.body.style.backgroundColor = '#ffffff';\n      setAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: name,\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode,\n      btn: btn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter text to Analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"MOnPyI2QDcICk/plR/yDaZM6v2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","name","App","_s","mode","setMode","btn","setbtn","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/risha/OneDrive/Desktop/Web Developement/ReactJS/jsx/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react';\n\nlet name = \"Rishabh\"\nfunction App() {\n  \n  const [mode, setMode] = useState('light');\n  const [btn, setbtn] = useState('dark');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n  } \n  const toggleMode = ()=>{\n    if(mode === 'light') {\n      setMode('dark');\n      setbtn('light');\n      document.body.style.backgroundColor = '#0B2447';\n      setAlert(\"Dark mode has been enabled\" , \"success\" );\n    }\n    else {\n      setMode('light');\n      setbtn('dark');\n      document.body.style.backgroundColor = '#ffffff';\n      setAlert(\"Light mode has been enabled\" , \"success\" );\n    }\n  } \n\n  return (\n    \n    <>\n    {/*This is a JSX comment. We use empty brackets because JSX can only return one tag\n    , also while using tags that doesn't have closing tag needs to be end with backward\n    slash like this :  */}\n      <Navbar title={name} aboutText=\"About\" mode={mode} toggleMode={toggleMode} btn={btn}/>\n      <Alert alert={alert}/>\n      <div className='container'>\n        <TextForm heading=\"Enter text to Analyze\" mode={mode}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,IAAIC,IAAI,GAAG,SAAS;AACpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGV,IAAI,KAAK,OAAO,EAAE;MACnBC,OAAO,CAAC,MAAM,CAAC;MACfE,MAAM,CAAC,OAAO,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,QAAQ,CAAC,4BAA4B,EAAG,SAAU,CAAC;IACrD,CAAC,MACI;MACHJ,OAAO,CAAC,OAAO,CAAC;MAChBE,MAAM,CAAC,MAAM,CAAC;MACdQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,QAAQ,CAAC,6BAA6B,EAAG,SAAU,CAAC;IACtD;EACF,CAAC;EAED,oBAEEX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBAIErB,OAAA,CAACL,MAAM;MAAC2B,KAAK,EAAEnB,IAAK;MAACoB,SAAS,EAAC,OAAO;MAACjB,IAAI,EAAEA,IAAK;MAACU,UAAU,EAAEA,UAAW;MAACR,GAAG,EAAEA;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtF3B,OAAA,CAACN,KAAK;MAACgB,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtB3B,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAP,QAAA,eACxBrB,OAAA,CAACJ,QAAQ;QAACiC,OAAO,EAAC,uBAAuB;QAACvB,IAAI,EAAEA;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA,eACN,CAAC;AAEP;AAACtB,EAAA,CAxCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
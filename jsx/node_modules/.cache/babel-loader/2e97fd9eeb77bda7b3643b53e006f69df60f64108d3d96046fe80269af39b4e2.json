{"ast":null,"code":"import _slicedToArray from\"C:/Users/risha/OneDrive/Desktop/Web Developement/ReactJS/jsx/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Alert from'./Components/Alert';import Navbar from'./Components/Navbar';import TextForm from'./Components/TextForm';import React,{useState}from'react';// import About from './Components/About';s\n/* This is used for using react router, but first we need to install \nit's package using : npm i react-router-dom */ // import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var name=\"Rishabh\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState('dark'),_useState4=_slicedToArray(_useState3,2),btn=_useState4[0],setbtn=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),alert=_useState6[0],setAlert=_useState6[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},2500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');setbtn('light');document.body.style.backgroundColor='#0B2447';showAlert(\"Dark mode has been enabled\",\"Success\");}else{setMode('light');setbtn('dark');document.body.style.backgroundColor='#ffffff';showAlert(\"Light mode has been enabled\",\"Success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:name,aboutText:\"About\",mode:mode,toggleMode:toggleMode,btn:btn}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter text to Analyze\",mode:mode,showAlert:showAlert})})]});}export default App;","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","name","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","btn","setbtn","_useState5","_useState6","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","className","heading"],"sources":["C:/Users/risha/OneDrive/Desktop/Web Developement/ReactJS/jsx/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react';\n// import About from './Components/About';s\n/* This is used for using react router, but first we need to install \nit's package using : npm i react-router-dom */\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\nlet name = \"Rishabh\"\nfunction App() {\n  \n  const [mode, setMode] = useState('light');\n  const [btn, setbtn] = useState('dark');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },2500)\n  } \n  const toggleMode = ()=>{\n    if(mode === 'light') {\n      setMode('dark');\n      setbtn('light');\n      document.body.style.backgroundColor = '#0B2447';\n      showAlert(\"Dark mode has been enabled\" , \"Success\" );\n    }\n    else {\n      setMode('light');\n      setbtn('dark');\n      document.body.style.backgroundColor = '#ffffff';\n      showAlert(\"Light mode has been enabled\" , \"Success\" );\n    }\n  } \n\n  return (\n    \n    <>\n    {/*This is a JSX comment. We use empty brackets because JSX can only return one tag\n    , also while using tags that doesn't have closing tag needs to be end with backward\n    slash like this :  */}\n    {/* // We have commented react router because it causes problem when we host it to github\n     <Router>\n      <Navbar title={name} aboutText=\"About\" mode={mode} toggleMode={toggleMode} btn={btn}/>\n      <Alert alert={alert}/>\n      \n        // A <Routes> looks through its children <Route>s and\n        //  renders the first one that matches the current URL. \n        <div className='container'>\n          <Routes>\n\n            <Route exact path=\"/\" element={<TextForm heading=\"Enter text to Analyze\" mode={mode} showAlert={showAlert} />}>         \n            </Route>\n            <Route exact path=\"/about\" element={<About mode={mode}/>}>\n            </Route>\n          \n          </Routes>\n        </div>\n    </Router> */}\n    <Navbar title={name} aboutText=\"About\" mode={mode} toggleMode={toggleMode} btn={btn}/>\n    <Alert alert={alert}/>\n    <div className='container'>\n      <TextForm heading=\"Enter text to Analyze\" mode={mode} showAlert={showAlert} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"kJACA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,EAAEC,QAAQ,KAAO,OAAO,CACpC;AACA;AACA,8CADA,CAEA;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,GAAI,CAAAC,IAAI,CAAG,SAAS,CACpB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,IAAAC,SAAA,CAAwBT,QAAQ,CAAC,OAAO,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAAsBd,QAAQ,CAAC,MAAM,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/BE,GAAG,CAAAD,UAAA,IAAEE,MAAM,CAAAF,UAAA,IAClB,IAAAG,UAAA,CAA0BlB,QAAQ,CAAC,IAAI,CAAC,CAAAmB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAACC,IAAI,CAAG,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,IAAI,CAAC,CACT,CAAC,CACD,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAO,CACrB,GAAGf,IAAI,GAAK,OAAO,CAAE,CACnBC,OAAO,CAAC,MAAM,CAAC,CACfI,MAAM,CAAC,OAAO,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAG,SAAU,CAAC,CACtD,CAAC,IACI,CACHT,OAAO,CAAC,OAAO,CAAC,CAChBI,MAAM,CAAC,MAAM,CAAC,CACdW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,6BAA6B,CAAG,SAAU,CAAC,CACvD,CACF,CAAC,CAED,mBAEEhB,KAAA,CAAAF,SAAA,EAAA4B,QAAA,eAsBA9B,IAAA,CAACL,MAAM,EAACoC,KAAK,CAAE1B,IAAK,CAAC2B,SAAS,CAAC,OAAO,CAACtB,IAAI,CAAEA,IAAK,CAACe,UAAU,CAAEA,UAAW,CAACX,GAAG,CAAEA,GAAI,CAAC,CAAC,cACtFd,IAAA,CAACN,KAAK,EAACwB,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBlB,IAAA,QAAKiC,SAAS,CAAC,WAAW,CAAAH,QAAA,cACxB9B,IAAA,CAACJ,QAAQ,EAACsC,OAAO,CAAC,uBAAuB,CAACxB,IAAI,CAAEA,IAAK,CAACU,SAAS,CAAEA,SAAU,CAAE,CAAC,CAC3E,CAAC,EACJ,CAAC,CAEP,CAEA,cAAe,CAAAd,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
[{"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\index.js":"1","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\reportWebVitals.js":"2","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\App.js":"3","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\Navbar.js":"4","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\TextForm.js":"5","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\Alert.js":"6","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\About.js":"7"},{"size":535,"mtime":1687495636075,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1687495636175,"results":"10","hashOfConfig":"9"},{"size":2423,"mtime":1687930898098,"results":"11","hashOfConfig":"9"},{"size":2569,"mtime":1687930898963,"results":"12","hashOfConfig":"9"},{"size":2374,"mtime":1687931445066,"results":"13","hashOfConfig":"9"},{"size":554,"mtime":1687931292253,"results":"14","hashOfConfig":"9"},{"size":4202,"mtime":1687842076409,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a3jw8n",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\index.js",[],[],"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\reportWebVitals.js",[],[],"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\App.js",[],[],"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\Navbar.js",["39","40"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import{Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    //use backticks(`) here instead of instead of regular ticks (apostrophe: ').\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\r\n  <div className=\"container-fluid\">\r\n    {/* use 'Link' instead of 'a' and use 'to' instead of 'href' to use react router. */}\r\n    {/* if we use '#' instead of '/' in href, then link will go no where. */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className={`form-check-label text-${props.btn}`} for=\"flexSwitchCheckDefault\">Enable {props.btn} Mode</label>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n/*This is used to set default props, in case no props are passed from App.js */\r\nNavbar.defaultProps = {\r\n  title : \"Set title here\",\r\n  aboutText : \"About text here\"\r\n}\r\n\r\n/*This is used to indicate the types of props used. */\r\nNavbar.propTypes = {\r\n  title : PropTypes.string,\r\n  aboutText : PropTypes.string,\r\n}\r\n","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\TextForm.js",["41"],[],"import React,{useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = ()=>{\r\n    \r\n    setText(text.toUpperCase()); //This will convert the text in textArea to uppercase.\r\n    props.showAlert(\"Converted to UpperCase!\" , \"Success\");\r\n  }\r\n  const handleLoClick = ()=>{\r\n    setText(text.toLowerCase()); //This will convert the text in textArea to uppercase.\r\n    props.showAlert(\"Converted to LowerCase!\" , \"Success\");\r\n  }\r\n/*This function will run when we change the value in textarea, we have to make this \r\nfunction because we have fixed the value of textarea to be 'text', so using this function\r\nwe can change the value to what user want. */\r\n  const handleOnChange = (event)=>{\r\n//Using this function we are changing value of 'text to 'text' + value entered by user. \r\n    setText(event.target.value);  \r\n  }\r\n  const [text,setText] = useState(\"\");\r\n  /* correct way to change value of text : setText(\"enter text\");\r\n    wrong way : text=\"new text\"; */\r\n  return (\r\n    <>\r\n    <div style={props.mode==='light' ? {color:'black'} : {color:'white'}}>\r\n      <div className='container my-3'>  \r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"6\" \r\n              style={{backgroundColor: props.mode==='light' ? 'white' : 'grey' ,\r\n                      color: props.mode==='light' ? 'black' : 'white'}}\r\n            ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n{/* if text is : 'I am  rishabh' then .split will give {'I','am','','rishabh} , as there\r\nis an empty element so to filter this empty element we are using filter method of js.s \r\nHere text.split(/\\s+/) will split text in ' ' and when a user change the line.*/}\r\n        <p>You have written {text.split(/\\s+/).filter((element)=>{return element.length!=0}).length  } words and {text.length} characters.</p>\r\n      </div>\r\n    </div>  \r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\Alert.js",[],[],"C:\\Users\\risha\\OneDrive\\Desktop\\Web Developement\\ReactJS\\jsx\\src\\Components\\About.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":12,"column":5,"nodeType":"44","endLine":12,"endColumn":42},{"ruleId":"42","severity":1,"message":"43","line":19,"column":11,"nodeType":"44","endLine":19,"endColumn":71},{"ruleId":"45","severity":1,"message":"46","line":43,"column":88,"nodeType":"47","messageId":"48","endLine":43,"endColumn":90},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]